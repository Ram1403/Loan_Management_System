// <auto-generated />
using System;
using Loan_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Loan_Management_System.Migrations
{
    [DbContext(typeof(LoanDbContext))]
    partial class LoanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Loan_Management_System.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("AadhaarNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("AnnualIncome")
                        .IsRequired()
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreditScore")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PanNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Loan_Management_System.Models.CustomerQuery", b =>
                {
                    b.Property<int>("QueryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QueryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("OfficerId")
                        .HasColumnType("int");

                    b.Property<string>("OfficerResponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QueryStatus")
                        .HasColumnType("int");

                    b.Property<string>("QuerySubject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("QueryId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OfficerId");

                    b.ToTable("CustomerQueries");
                });

            modelBuilder.Entity("Loan_Management_System.Models.EmailNotification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TemplateUsed")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.HasIndex("LoanId");

                    b.HasIndex("UserId");

                    b.ToTable("EmailNotifications");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DisbursementDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EmiAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("InterestRateApplied")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("LoanEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoanStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaidEmiCount")
                        .HasColumnType("int");

                    b.Property<decimal>("PenaltyAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<decimal>("SanctionedAmount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<int>("TotalEmiCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanId");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanAdmin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("AdminLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("AppointedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoanAdmins");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OfficerAssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OfficerId")
                        .HasColumnType("int");

                    b.Property<string>("PurposeOfLoan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<int>("SchemeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubmittedDocuments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OfficerId");

                    b.HasIndex("SchemeId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("int");

                    b.Property<int?>("VerifiedBy")
                        .HasColumnType("int");

                    b.Property<int?>("VerifiedByOfficerOfficerId")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("VerifiedByOfficerOfficerId");

                    b.ToTable("LoanDocuments");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanOfficer", b =>
                {
                    b.Property<int>("OfficerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficerId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentWorkload")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LoanAdminAdminId")
                        .HasColumnType("int");

                    b.Property<int>("MaxLoansAssigned")
                        .HasColumnType("int");

                    b.Property<decimal?>("PerformanceRating")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OfficerId");

                    b.HasIndex("LoanAdminAdminId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoanOfficers");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanScheme", b =>
                {
                    b.Property<int>("SchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchemeId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("EligibilityCriteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("SchemeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TenureMonths")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SchemeId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("LoanSchemes");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Npa", b =>
                {
                    b.Property<int>("NpaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NpaId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysOverdue")
                        .HasColumnType("int");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NpaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NpaStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("OverdueAmount")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("NpaId");

                    b.HasIndex("LoanId")
                        .IsUnique();

                    b.ToTable("Npas");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Repayment", b =>
                {
                    b.Property<int>("RepaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmiNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("LateFee")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentGatewayResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("PenaltyPaid")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RepaymentId");

                    b.HasIndex("LoanId");

                    b.ToTable("Repayments");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("GeneratedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Parameters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("GeneratedBy");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Loan_Management_System.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Customer", b =>
                {
                    b.HasOne("Loan_Management_System.Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Loan_Management_System.Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Loan_Management_System.Models.CustomerQuery", b =>
                {
                    b.HasOne("Loan_Management_System.Models.Customer", "Customer")
                        .WithMany("CustomerQueries")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loan_Management_System.Models.LoanOfficer", "LoanOfficer")
                        .WithMany("HandledCustomerQueries")
                        .HasForeignKey("OfficerId");

                    b.Navigation("Customer");

                    b.Navigation("LoanOfficer");
                });

            modelBuilder.Entity("Loan_Management_System.Models.EmailNotification", b =>
                {
                    b.HasOne("Loan_Management_System.Models.Loan", "Loan")
                        .WithMany("EmailNotifications")
                        .HasForeignKey("LoanId");

                    b.HasOne("Loan_Management_System.Models.User", "User")
                        .WithMany("EmailNotifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Loan", b =>
                {
                    b.HasOne("Loan_Management_System.Models.LoanApplication", "LoanApplication")
                        .WithOne("Loan")
                        .HasForeignKey("Loan_Management_System.Models.Loan", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanAdmin", b =>
                {
                    b.HasOne("Loan_Management_System.Models.User", "User")
                        .WithOne("LoanAdmin")
                        .HasForeignKey("Loan_Management_System.Models.LoanAdmin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanApplication", b =>
                {
                    b.HasOne("Loan_Management_System.Models.Customer", "Customer")
                        .WithMany("LoanApplications")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loan_Management_System.Models.LoanOfficer", "LoanOfficer")
                        .WithMany("AssignedLoanApplications")
                        .HasForeignKey("OfficerId");

                    b.HasOne("Loan_Management_System.Models.LoanScheme", "LoanScheme")
                        .WithMany("LoanApplications")
                        .HasForeignKey("SchemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("LoanOfficer");

                    b.Navigation("LoanScheme");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanDocument", b =>
                {
                    b.HasOne("Loan_Management_System.Models.LoanApplication", "LoanApplication")
                        .WithMany("LoanDocuments")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loan_Management_System.Models.LoanOfficer", "VerifiedByOfficer")
                        .WithMany("VerifiedLoanDocuments")
                        .HasForeignKey("VerifiedByOfficerOfficerId");

                    b.Navigation("LoanApplication");

                    b.Navigation("VerifiedByOfficer");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanOfficer", b =>
                {
                    b.HasOne("Loan_Management_System.Models.LoanAdmin", "LoanAdmin")
                        .WithMany("LoanOfficers")
                        .HasForeignKey("LoanAdminAdminId");

                    b.HasOne("Loan_Management_System.Models.User", "User")
                        .WithOne("LoanOfficer")
                        .HasForeignKey("Loan_Management_System.Models.LoanOfficer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanAdmin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanScheme", b =>
                {
                    b.HasOne("Loan_Management_System.Models.LoanAdmin", "LoanAdmin")
                        .WithMany("LoanSchemes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanAdmin");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Npa", b =>
                {
                    b.HasOne("Loan_Management_System.Models.Loan", "Loan")
                        .WithOne("Npa")
                        .HasForeignKey("Loan_Management_System.Models.Npa", "LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Repayment", b =>
                {
                    b.HasOne("Loan_Management_System.Models.Loan", "Loan")
                        .WithMany("Repayments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Report", b =>
                {
                    b.HasOne("Loan_Management_System.Models.LoanAdmin", "LoanAdmin")
                        .WithMany("Reports")
                        .HasForeignKey("GeneratedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loan_Management_System.Models.User", null)
                        .WithMany("Reports")
                        .HasForeignKey("UserId");

                    b.Navigation("LoanAdmin");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Customer", b =>
                {
                    b.Navigation("CustomerQueries");

                    b.Navigation("LoanApplications");
                });

            modelBuilder.Entity("Loan_Management_System.Models.Loan", b =>
                {
                    b.Navigation("EmailNotifications");

                    b.Navigation("Npa");

                    b.Navigation("Repayments");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanAdmin", b =>
                {
                    b.Navigation("LoanOfficers");

                    b.Navigation("LoanSchemes");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanApplication", b =>
                {
                    b.Navigation("Loan");

                    b.Navigation("LoanDocuments");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanOfficer", b =>
                {
                    b.Navigation("AssignedLoanApplications");

                    b.Navigation("HandledCustomerQueries");

                    b.Navigation("VerifiedLoanDocuments");
                });

            modelBuilder.Entity("Loan_Management_System.Models.LoanScheme", b =>
                {
                    b.Navigation("LoanApplications");
                });

            modelBuilder.Entity("Loan_Management_System.Models.User", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("EmailNotifications");

                    b.Navigation("LoanAdmin");

                    b.Navigation("LoanOfficer");

                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
